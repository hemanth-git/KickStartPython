Object oriented programmin in python:
------------------------------------
class Cat:
  def __init__(self, color, legs):
    self.color = color
    self.legs = legs

felix = Cat("ginger", 4)
rover = Cat("dog-colored", 4)
stumpy = Cat("brown", 3)
# here __init__() is used as constructor and "self is passed to it"
# here 3 seperate objects are created

All methods must have self as their first parameter, although it isn't explicitly passed
Within a method definition, self refers to the instance calling the method.
In an __init__ method, self.attribute can therefore be used to set the initial value of an instance's attributes.

felix = Cat("ginger", 4)
print(felix.color)

Classes can have other methods:-----
class Dog:
  def __init__(self, name, color):
    self.name = name
    self.color = color

  def bark(self):
    print("Woof!")

fido = Dog("Fido", "brown")
print(fido.name)
fido.bark()

Class attributes are shared by all instances of the class.:
-------------------------------------------------------------
Classes can also have class attributes, created by assigning variables within the body of the class. These can be accessed either from instances of the class, or the class itself.


class Dog:
  legs = 4
  def __init__(self, name, color):
    self.name = name
    self.color = color

fido = Dog("Fido", "brown")
print(fido.legs)
print(Dog.legs)




